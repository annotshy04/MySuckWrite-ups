input = open("input.txt", "rb").read()

total = 264
t = (total + 1) * 5
numLength = (total * 30) + t

# check something

blocks = []
out = [





] # read from input

for i in range(len(out)):
    r = out[i].split(" ")
    if i > 0:
        for j in range(len(r)):
            if len(r[j]) != 6:
                print("Wrong format")
                exit
            blocks[j].append(r[j])
    else:
        for j in range(len(r)):
            if len(r[j]) != 6:
                print("Wrong format")
                exit
            blocks.append([])
            blocks[j].append(r[j])

def random_gen():
    list1 = []
    for i in range(1, len(blocks) + 1):
        y = (((i * 327) % 681) + 344) % 313
        list1.append(y)
    return list1

def scramble(block, seed):
    raw = "".join(s for s in block)
    # print("raw: ", raw)
    bm = "10 " * len(raw)
    bm = bm.split(" ")
    for i in range(len(raw)):
        y = (i * seed) % len(raw)
        n = bm[y]
        while (n != "10"):
            y = (y + 1) % len(raw)
            n = bm[y]
        if raw[i] == "1":
            n = "11"
        else:
            n = "00"
        bm[y] = n
    raw2 = "".join(s for s in bm)
    # print("raw2: ", raw2)
    b = int(raw2, 2)
    return b

result = 0
seeds = []
for i in range(1, len(blocks) + 1):
    seeds.append(i * 127 % 500)

randoms = random_gen()
output_file = []
for i in range(len(blocks)):
    fun = scramble(blocks[i], seeds[i])
    # print("fun: ", i, fun)
    result = fun ^ result ^ randoms[i]
    output_file.append(result)
    print(result)

# print(len(output_file))